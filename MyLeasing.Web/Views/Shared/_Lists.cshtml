
@model IEnumerable<MyLeasing.Web.Data.Entities.IPerson>


    

@* 1.ª função para a string de formatação *@
@functions {
    // Função de formatação de telefone
    private static string FormatPhoneNumberToString(string phoneNumber)
    {
    // Remove any non-digit characters from the phone number
        phoneNumber = new string(phoneNumber.Where(char.IsDigit).ToArray());


    // Check if the phone number is valid
        if (string.IsNullOrEmpty(phoneNumber)) return "N/A";


    // Format the phone number based on its length
        return phoneNumber.Length switch
        {
            >= 11 => $"+{phoneNumber[..^10]} ({phoneNumber.Substring(phoneNumber.Length - 10, 3)}) " +
                     $"{phoneNumber.Substring(phoneNumber.Length - 7, 4)}-{phoneNumber[^3..]}",

            >= 8 =>  $"({phoneNumber[..^7]}) {phoneNumber.Substring(phoneNumber.Length - 7, 4)}-" +
                     $"{phoneNumber[^3..]}",

            >= 5 =>  $"({phoneNumber[..2]}) {phoneNumber.Substring(2, 4)}-{phoneNumber[6..]}",
            _ =>     "N/A"

            };
    }

}




    @* <partial name="_Lists"/> *@
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Document)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FullName)
        </th>
        @* <th> *@
        @*     @Html.DisplayNameFor(model => model.FirstName) *@
        @* </th> *@
        @* <th> *@
        @*     @Html.DisplayNameFor(model => model.LastName) *@
        @* </th> *@
        <th>
            @Html.DisplayNameFor(model => model.ProfilePhotoUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProfilePhotoUrl)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.FixedPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CellPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Document)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>

            <td>
                <img src="@Url.Content(item.ProfilePhotoFullUrl)"
                     class="img-thumbnail" width="150" height="150" alt="Image" id="preview"/>
            </td>
            <td>
                <img src="@Url.Content(item.ProfilePhotoIdUrl)"
                     class="img-thumbnail" width="150" height="150" alt="Image" id="preview"/>
            </td>
            @* <td> *@
            @*     @Html.DisplayFor(modelItem => item.FirstName) *@
            @* </td> *@
            @* <td> *@
            @*     @Html.DisplayFor(modelItem => item.LastName) *@
            @* </td> *@

            <!-- Colunas com formatação -->
            <td>@FormatPhoneNumberToString(item.FixedPhone ?? "N/A")</td>
            <td>@FormatPhoneNumberToString(item.CellPhone ?? "N/A")</td>

            @* <td> *@
            @*     @Html.DisplayFor(modelItem => item.FixedPhone) *@
            @* </td> *@
            @* <td> *@
            @*     @Html.DisplayFor(modelItem => item.CellPhone) *@
            @* </td> *@

            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
    }
