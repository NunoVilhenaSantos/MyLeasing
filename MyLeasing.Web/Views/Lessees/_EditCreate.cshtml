@using System.Text.RegularExpressions

@* @model IEnumerable<MyLeasing.Web.Data.Entities.Owner> *@
@* @model IEnumerable<MyLeasing.Web.Data.Entities.Lessees> *@

@* @model MyLeasing.Web.Data.Entities.Owner *@
@* @model MyLeasing.Web.Data.Entities.Lessees *@

@* @model MyLeasing.Web.Models.OwnerViewModel *@
@model MyLeasing.Web.Models.LesseeViewModel


@switch (ViewData["Title"] as string)
{
    case "Create - Owners":
        <h1>Create Owner</h1>
        break;
    case "Create - Lessees":
        <h1>Create Lessees</h1>
        break;
    case "Edit - Owners":
        <h1>Edit Owner</h1>
        break;
    case "Edit - Lessees":
        <h1>Edit Lessees</h1>
        break;
    default:
        <h1>Unknown</h1>
        break;
}


@{
    const string fileImageToShow = "~/images/PlaceHolders/240px-Placeholder_no_text.png";

    var action = ViewContext.RouteData.Values["action"] as string;

}


<div class="col-auto">


    @{
        System.Diagnostics.Debug.Assert(action != null, nameof(action) + " != null");
    }
    @switch (action)
    {
        case var _ when Regex.IsMatch(action, @"^Create$"):
            <td>
                <img src="@Url.Content(fileImageToShow)"
                     class="img-thumbnail preview" width="350" height="auto" alt="Image"/>
            </td>
            <td>
                <img src="@Url.Content(fileImageToShow)"
                     class="img-thumbnail preview" width="350" height="auto" alt="Image"/>
            </td>
            break;

        case var _ when Regex.IsMatch(action, @"^Edit$"):
            <td>
                <img src="@Url.Content(Model.ProfilePhotoFullUrl)"
                     class="img-thumbnail preview" width="350" height="auto" alt="Image"/>
            </td>
            <td>
                <img src="@Url.Content(Model.ProfilePhotoIdUrl)"
                     class="img-thumbnail preview" width="350" height="auto" alt="Image"/>
            </td>
            break;

        default:
            // Caso padrão ou ação desconhecida
            <div>
                Caso padrão ou ação desconhecida
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
            break;
    }

</div>

<div class="col">
    <div class="row">
        <form asp-action="Edit" enctype="multipart/form-data">
            @* <form asp-action="Create" enctype="multipart/form-data">  *@

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id"/>
            <input type="hidden" asp-for="ProfilePhotoId"/>
            <input type="hidden" asp-for="ProfilePhotoUrl"/>
            <div class="form-group">
                <label asp-for="Document" class="control-label"></label>
                <input asp-for="Document" class="form-control"/>
                <span asp-validation-for="Document" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control"/>
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control"/>
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" class="form-control" id="imageInput"
                       onchange="previewImages(event)" type="file"/>
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="FixedPhone" class="control-label"></label>
                <input asp-for="FixedPhone" class="form-control"/>
                <span asp-validation-for="FixedPhone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CellPhone" class="control-label"></label>
                <input asp-for="CellPhone" class="form-control"/>
                <span asp-validation-for="CellPhone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control"/>
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>


            @switch (action)
            {
                case var _ when Regex.IsMatch(action, @"^Create$"):

                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                    break;

                case var _ when Regex.IsMatch(action, @"^Edit$"):
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                    break;

                default:
                    // Caso padrão ou ação desconhecida
                    <div>
                        Caso padrão ou ação desconhecida
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                    break;
            }

        </form>
    </div>
</div>